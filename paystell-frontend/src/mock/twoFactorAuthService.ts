// Mock version of twoFactorAuthService.ts
export const enableTwoFactorAuth = async (): Promise<{ qrCode: string; secret: string }> => {
  await new Promise((resolve) => setTimeout(resolve, 800));

  return {
    qrCode: 'otpauth://totp/PayStell:user@example.com?secret=JBSWY3DPEHPK3PXP&issuer=PayStell',
    secret: 'JBSWY3DPEHPK3PXP',
  };
};

export const verifyTwoFactorCode = async (token: string): Promise<boolean> => {
  await new Promise((resolve) => setTimeout(resolve, 800));

  if (token === '123456') {
    //! Togen generated by the Google Authenticator app
    return true;
  }
  throw new Error('Invalid verification code. Please try again.');
};

export const resendTwoFactorCode = async (): Promise<{ qrCode: string; secret: string }> => {
  await new Promise((resolve) => setTimeout(resolve, 800));

  return {
    qrCode: 'otpauth://totp/PayStell:user@example.com?secret=KBSWY3DPEHPK3PYQ&issuer=PayStell',
    secret: 'KBSWY3DPEHPK3PYQ',
  };
};
